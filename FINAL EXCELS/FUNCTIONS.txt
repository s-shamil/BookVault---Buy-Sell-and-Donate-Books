create or replace FUNCTION FIND_BOOK(GIVEN IN VARCHAR2)
RETURN VARCHAR2 IS
    BOOK VARCHAR2(100);

BEGIN
    SELECT BOOK_NAME INTO BOOK FROM BOOK_CATALOG WHERE(ISBN=GIVEN);
    RETURN BOOK;
EXCEPTION
    WHEN NO_DATA_FOUND THEN
    RETURN 'NO BOOK WITH THIS ISBN';
    WHEN OTHERS THEN
    RETURN 'UNKNOWN ERROR. GENERATED FROM PLSQL';
END;


create or replace FUNCTION SHOW_MY_DONATED(MY_ID IN VARCHAR2)
RETURN MY_DONATED_TAB
IS
    TEMP_TAB MY_DONATED_TAB := MY_DONATED_TAB();
    NN INTEGER := 0;
BEGIN
    FOR RR IN (SELECT BOOK_ID,BOOK_NAME FROM BOOK_ENTRY JOIN BOOK_CATALOG USING(ISBN) WHERE DONOR_ID=MY_ID)
    LOOP
        TEMP_TAB.EXTEND;
        NN := NN+1;
        TEMP_TAB(NN) := MY_DONATED(RR.BOOK_ID, RR.BOOK_NAME);
    END LOOP;
    RETURN TEMP_TAB;
END;




create or replace FUNCTION SHOW_MY_RECEIVED(MY_ID IN VARCHAR2)
RETURN MY_RECEIVED_TAB
IS
    TEMP_TAB MY_RECEIVED_TAB := MY_RECEIVED_TAB();
    NN INTEGER := 0;
BEGIN
    FOR RR IN (SELECT BOOK_ID,BOOK_NAME,DELIVERY_DATE FROM D_HISTORY JOIN BOOK_ENTRY USING(BOOK_ID) JOIN BOOK_CATALOG USING(ISBN) WHERE RECIPIENT_ID=MY_ID)
    LOOP
        TEMP_TAB.EXTEND;
        NN := NN+1;
        TEMP_TAB(NN) := MY_RECEIVED(RR.BOOK_ID, RR.BOOK_NAME,RR.DELIVERY_DATE);
    END LOOP;
    RETURN TEMP_TAB;
END;


create or replace FUNCTION SHOW_NOTI(MY_ID IN VARCHAR2)
RETURN MY_NOTI_TAB
IS
    TEMP_TAB MY_NOTI_TAB := MY_NOTI_TAB();
    NN INTEGER := 0;
BEGIN
    FOR RR IN (SELECT BOOK_ID,BOOK_NAME,AUTHOR_NAME,PRICE_E FROM "NOTIFICATION" JOIN BOOK_ENTRY USING(BOOK_ID) JOIN BOOK_CATALOG USING(ISBN) JOIN AUTHOR_BOOK USING (ISBN) JOIN AUTHOR USING(AUTHOR_ID) WHERE RECEIVER_ID=MY_ID)
    LOOP
        TEMP_TAB.EXTEND;
        NN := NN+1;
        TEMP_TAB(NN) := MY_NOTI(RR.BOOK_ID, RR.BOOK_NAME, RR.AUTHOR_NAME, RR.PRICE_E);
    END LOOP;
    RETURN TEMP_TAB;
END;

create or replace FUNCTION SHOW_WISHES(MY_ID IN VARCHAR2)
RETURN MY_WISH_TAB
IS
    TEMP_TAB MY_WISH_TAB := MY_WISH_TAB();
    NN INTEGER := 0;
BEGIN
    FOR RR IN (SELECT ISBN,BOOK_NAME,AUTHOR_NAME,PRICE_E FROM D_WISHLIST JOIN BOOK_CATALOG USING(ISBN) JOIN AUTHOR_BOOK USING (ISBN) JOIN AUTHOR USING(AUTHOR_ID) WHERE USER_ID=MY_ID)
    LOOP
        TEMP_TAB.EXTEND;
        NN := NN+1;
        TEMP_TAB(NN) := MY_WISH(RR.ISBN, RR.BOOK_NAME, RR.AUTHOR_NAME, RR.PRICE_E);
    END LOOP;
    RETURN TEMP_TAB;
END;