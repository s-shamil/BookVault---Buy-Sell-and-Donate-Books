create or replace PROCEDURE ADD_TO_BOOK_ENTRY_ADMIN(GIVEN_ISBN IN VARCHAR2,GIVEN_ID VARCHAR2) IS

BEGIN

        INSERT INTO BOOK_ENTRY (ISBN,DONOR_ID)
        VALUES (GIVEN_ISBN,GIVEN_ID);

END;





create or replace PROCEDURE ADD_TO_DONATE_Q(GIVEN_ISBN IN VARCHAR2,GIVEN_ID VARCHAR2) IS

BEGIN

        INSERT INTO DONATION_Q (ISBN,DONOR_ID,GIVE_DATE)
        VALUES (GIVEN_ISBN,GIVEN_ID,SYSDATE);

END;





create or replace PROCEDURE ADD_TO_WISH(GIVEN_ISBN IN VARCHAR2,GIVEN_ID VARCHAR2) IS
    IDX NUMBER;
BEGIN
    IDX:=0;
    FOR R IN (SELECT ISBN, USER_ID FROM D_WISHLIST)
    LOOP
        IF(R.ISBN=GIVEN_ISBN AND R.USER_ID=GIVEN_ID) THEN
            IDX:=1;
        END IF;
    END LOOP;
    DBMS_OUTPUT.PUT_LINE('VALUE ISNOT' || IDX);
    IF (IDX=0) THEN
        DBMS_OUTPUT.PUT_LINE('VALUE IS HERE');
        INSERT INTO D_WISHLIST (ISBN, USER_ID,WISH_DATE)
        VALUES (GIVEN_ISBN,GIVEN_ID,SYSDATE);
    END IF;
END;






create or replace PROCEDURE ADD_USER(
TID IN VARCHAR2,
TNAME IN VARCHAR2, 
TPHONE IN CHAR, 
TEMAIL IN VARCHAR2,
TLOCATION IN VARCHAR2,
TZIP IN VARCHAR2,
TPASS IN VARCHAR2) IS
    IDX NUMBER;
BEGIN
    IDX:=0;
    FOR R IN (SELECT USER_ID FROM "USER")
    LOOP
        IF(R.USER_ID=TID) THEN
            IDX:=1;
        END IF;
    END LOOP;

    IF (IDX=0) THEN

        INSERT INTO "USER"(USER_ID,NAME,PHONE_NUM,EMAIL,CURR_CREDIT,LOCATION,BALANCE,ZIP_CODE,PASSWORD)
        VALUES (TID,TNAME,TPHONE,TEMAIL,500,TLOCATION,0,TZIP,TPASS);
    END IF;
END;



create or replace PROCEDURE NOTIF_ACCEPTED (U_ID IN VARCHAR2, BOOK IN VARCHAR2) IS
  -- this_isbn varchar2(20); 



BEGIN
    --1
    INSERT INTO D_DISTRIBUTION (BOOK_ID, RECIPIENT_ID,DUE_DATE)
    VALUES(BOOK,U_ID,SYSDATE);
    --2
    DELETE FROM D_WISHLIST
    WHERE USER_ID=U_ID AND 
    ISBN=(SELECT ISBN FROM BOOK_ENTRY WHERE BOOK_ID=BOOK);
    --3
    DELETE FROM D_STOCK
    WHERE BOOK_ID=BOOK;
    --4
    DELETE FROM NOTIFICATION
    WHERE BOOK_ID=BOOK AND RECEIVER_ID=U_ID;


END;


create or replace PROCEDURE NOTIF_REFRESH IS
    DATEBET number;
    REC VARCHAR2(20);
    BOOK VARCHAR(20);
BEGIN
    FOR RR IN (SELECT * FROM NOTIFICATION)
    LOOP
        SELECT SYSDATE-RR.NOTI_DATE intO DATEBET FROM DUAL;
        IF DATEBET>14 THEN
            REC:=RR.RECEIVER_ID;
            BOOK:=RR.BOOK_ID;
            DELETE FROM NOTIFICATION
            WHERE (RECEIVER_ID=REC) and (BOOK_ID=BOOK);

            --1
            UPDATE D_STOCK SET BOOKED_STATUS='N'
            WHERE BOOK_ID=BOOK;

        END IF;

    END LOOP;

END;




CREATE OR REPLACE PROCEDURE ADMIN_APPROVES_DISTRIBUTION(BOOK IN VARCHAR2,RECIP IN VARCHAR2) IS
    credit NUMBER;
    
    
BEGIN
    SELECT (0.8*PRICE_A+0.2*PRICE_E) into credit
    FROM BOOK_CATALOG
    WHERE ISBN=(SELECT ISBN FROM BOOK_ENTRY WHERE BOOK_ID=BOOK);
    INSERT INTO D_HISTORY (BOOK_ID,RECIPIENT_ID,CH_DONOR,CH_RECIPIENT,DELIVERY_DATE) VALUES
    (BOOK,RECIP,credit,credit,SYSDATE);
END;


CREATE OR REPLACE PROCEDURE ADMIN_DELETES_FROM_DIST(BOOK IN VARCHAR2,RECIP IN VARCHAR2) IS
    TEMP_ISBN VARCHAR2(20);
    
    
BEGIN
    SELECT ISBN into TEMP_ISBN
    FROM D_STOCK
    WHERE BOOK_ID=BOOK;
    
    DELETE FROM D_WISHLIST
    WHERE USER_ID=RECIP AND ISBN=TEMP_ISBN;
    
    UPDATE D_STOCK SET BOOKED_STATUS='N'
    WHERE BOOK_ID=BOOK;
END;




CREATE OR REPLACE PROCEDURE DELETE_FROM_DQ_ADMIN(GIVEN_ISBN IN VARCHAR2,GIVEN_ID VARCHAR2,DT IN DATE) IS

BEGIN
        DELETE FROM DONATION_Q
        WHERE ISBN=GIVEN_ISBN AND DONOR_ID=GIVEN_ID AND DT=GIVE_DATE;
END;



create or replace PROCEDURE ADD_TO_BOOK_ENTRY_ADMIN(GIVEN_ISBN IN VARCHAR2,GIVEN_ID VARCHAR2, DT IN DATE,COND IN VARCHAR2) IS

BEGIN

        INSERT INTO BOOK_ENTRY (ISBN,DONOR_ID,CONDITION)
        VALUES (GIVEN_ISBN,GIVEN_ID,COND);
        
        DELETE FROM DONATION_Q
        WHERE ISBN=GIVEN_ISBN AND DONOR_ID=GIVEN_ID AND DT=GIVE_DATE;
END;




CREATE OR REPLACE PROCEDURE ADMIN_ADD_BOOK_CATALG(ISB IN VARCHAR2,NM IN VARCHAR2,AUTH IN VARCHAR2,PUB IN VARCHAR2, GEN IN VARCHAR2, 
PA IN NUMBER, PE IN NUMBER, RATE in char) IS
    cnt number;
    aid varchar2(20);
    pid varchar2(20);
    gid varchar2(20);
BEGIN
    cnt:=0;
    SELECT COUNT(*) into cnt FROM AUTHOR WHERE AUTHOR_NAME=AUTH;
    if cnt=0 then
    insert into AUTHOR (AUTHOR_NAME,POPULARITY)
    VALUES (AUTH, 'C');
    END IF;
    
    cnt:=0;
    SELECT COUNT(*) into cnt FROM PUBLISHER WHERE PUB_NAME=PUB;
    if cnt=0 then
    insert into PUBLISHER (PUB_NAME,RATING)
    VALUES (PUB, 'C');
    END IF;
    
    SELECT PUB_ID into pid FROM PUBLISHER WHERE PUB_NAME=PUB;
    SELECT AUTHOR_ID into aid FROM AUTHOR WHERE AUTHOR_NAME=AUTH;
    SELECT GENRE_ID into gid FROM GENRE WHERE GENRE_NAME=GEN;
    
    INSERT INTO AUTHOR_BOOK (AUTHOR_ID,ISBN)
    VALUES (aid,ISB);
    
    INSERT INTO GENRE_BOOK (GENRE_ID,ISBN)
    VALUES (gid,ISB);
    
    INSERT INTO BOOK_CATALOG(ISBN,PUB_ID,BOOK_NAME,PRICE_A,PRICE_E,RATING)
    VALUES(ISB,PUB,NM,PA,PE,RATE);
    
END;