create or replace PROCEDURE ADD_TO_BOOK_ENTRY_ADMIN(GIVEN_ISBN IN VARCHAR2,GIVEN_ID VARCHAR2) IS

BEGIN

        INSERT INTO BOOK_ENTRY (ISBN,DONOR_ID)
        VALUES (GIVEN_ISBN,GIVEN_ID);

END;





create or replace PROCEDURE ADD_TO_DONATE_Q(GIVEN_ISBN IN VARCHAR2,GIVEN_ID VARCHAR2) IS

BEGIN

        INSERT INTO DONATION_Q (ISBN,DONOR_ID,GIVE_DATE)
        VALUES (GIVEN_ISBN,GIVEN_ID,SYSDATE);

END;





create or replace PROCEDURE ADD_TO_WISH(GIVEN_ISBN IN VARCHAR2,GIVEN_ID VARCHAR2) IS
    IDX NUMBER;
BEGIN
    IDX:=0;
    FOR R IN (SELECT ISBN, USER_ID FROM D_WISHLIST)
    LOOP
        IF(R.ISBN=GIVEN_ISBN AND R.USER_ID=GIVEN_ID) THEN
            IDX:=1;
        END IF;
    END LOOP;
    DBMS_OUTPUT.PUT_LINE('VALUE ISNOT' || IDX);
    IF (IDX=0) THEN
        DBMS_OUTPUT.PUT_LINE('VALUE IS HERE');
        INSERT INTO D_WISHLIST (ISBN, USER_ID,WISH_DATE)
        VALUES (GIVEN_ISBN,GIVEN_ID,SYSDATE);
    END IF;
END;






create or replace PROCEDURE ADD_USER(
TID IN VARCHAR2,
TNAME IN VARCHAR2, 
TPHONE IN CHAR, 
TEMAIL IN VARCHAR2,
TLOCATION IN VARCHAR2,
TZIP IN VARCHAR2,
TPASS IN VARCHAR2) IS
    IDX NUMBER;
BEGIN
    IDX:=0;
    FOR R IN (SELECT USER_ID FROM "USER")
    LOOP
        IF(R.USER_ID=TID) THEN
            IDX:=1;
        END IF;
    END LOOP;

    IF (IDX=0) THEN

        INSERT INTO "USER"(USER_ID,NAME,PHONE_NUM,EMAIL,CURR_CREDIT,LOCATION,BALANCE,ZIP_CODE,PASSWORD)
        VALUES (TID,TNAME,TPHONE,TEMAIL,500,TLOCATION,0,TZIP,TPASS);
    END IF;
END;



create or replace PROCEDURE NOTIF_ACCEPTED (U_ID IN VARCHAR2, BOOK IN VARCHAR2) IS
  -- this_isbn varchar2(20); 



BEGIN
    --1
    INSERT INTO D_DISTRIBUTION (BOOK_ID, RECIPIENT_ID,DUE_DATE)
    VALUES(BOOK,U_ID,SYSDATE);
    --2
    DELETE FROM D_WISHLIST
    WHERE USER_ID=U_ID AND 
    ISBN=(SELECT ISBN FROM BOOK_ENTRY WHERE BOOK_ID=BOOK);
    --3
    DELETE FROM D_STOCK
    WHERE BOOK_ID=BOOK;
    --4
    DELETE FROM NOTIFICATION
    WHERE BOOK_ID=BOOK AND RECEIVER_ID=U_ID;


END;


create or replace PROCEDURE NOTIF_REFRESH IS
    DATEBET number;
    REC VARCHAR2(20);
    BOOK VARCHAR(20);
BEGIN
    FOR RR IN (SELECT * FROM NOTIFICATION)
    LOOP
        SELECT SYSDATE-RR.NOTI_DATE intO DATEBET FROM DUAL;
        IF DATEBET>14 THEN
            REC:=RR.RECEIVER_ID;
            BOOK:=RR.BOOK_ID;
            DELETE FROM NOTIFICATION
            WHERE (RECEIVER_ID=REC) and (BOOK_ID=BOOK);

            --1
            UPDATE D_STOCK SET BOOKED_STATUS='N'
            WHERE BOOK_ID=BOOK;

        END IF;

    END LOOP;

END;